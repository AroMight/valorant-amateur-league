@import "../../../../node_modules/bootstrap/scss/functions";

@import "partials/variables";
@import "partials/custom_settings";

$accordion-icon-color: white; // cor do ícone
$accordion-icon-active-color: white; // cor do ícone ativo

@import "../../../../node_modules/bootstrap/scss/variables";
@import "../../../../node_modules/bootstrap/scss/variables-dark";

$theme-colors: map-merge($theme-colors, $custom-colors);

@import "../../../../node_modules/bootstrap/scss/bootstrap";
@import "partials/mixins";
@import "partials/accordion";
@import "components/messages";
@import "components/tables";
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

@font-face {
    font-family: "Tungsten";
    src: url(../fonts/Tungsten-Bold.ttf) format("truetype");
    font-weight: bold;
    font-style: normal;
}

main {
    flex: 1;
}

body {
    font-family: "Roboto", sans-serif;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: "Tungsten", sans-serif;
}

// create an overlay for the overlay class and for each breakpoint
.overlay {
    @include overlay($color: rgba(0, 0, 0, 0.3));

    @each $breakpoint, $value in $grid-breakpoints {
        &-#{$breakpoint} {
            @include overlay($breakpoint: $breakpoint)
        }
    }
}



// create a button for each provider
@each $provider, $color in $providers {
    @include provider-button($provider, $bg-color: $color)
}

.footer-brand-icons, .social-icons-container {
    @include fa-brand-icon("youtube", $youtube);
    @include fa-brand-icon("discord", $discord);
    @include fa-brand-icon("github", $black);
}

@each $display, $size in $display-font-sizes {
    .display-#{$display} {
        @each $breakpoint, $value in $grid-breakpoints {
            &-#{$breakpoint} {
                @include media-breakpoint-up($breakpoint) {
                    font-size: $size;
                }
            }
        }
    }
}

.bg-primary-red {
    color: $title;

    .btn-outline-light:hover {
        @extend .text-title;
        @extend .bg-dark;
        border: $dark;
    }
}

// verificar
.text-shadow {
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
}

.jump-animation:hover {
    animation: translateY 500ms 4 alternate;
}

.position-md-absolute {
    @include media-breakpoint-down(md) {
        position: absolute;
        top: 12, 5%;
        left: 12, 5%;
    }
}

.login-background {
    background-size: cover;
    background-position: center;
    min-height: 100vh;
}

/* Keyframes */
@keyframes translateY {
    from {
        transform: translateY(0) scale(1);
    }

    to {
        transform: translateY(-5px) scale(1.1);
    }
}

.section-social {
    .social-background {
        background-size: cover;
        background-position: center;
    }

    .container-social {
        padding: 100px 0;
        max-height: 1020px;
    }
}

aside.hall-of-fame {
    .card {
        transition: all 300ms ease-in-out;

        &:hover {
            border-color: $red;
            transform: scale(1.05);

            img {
                background-color: $primary-red;
            }
        }

        img {
            transition: all 300ms ease-in-out;
        }

        .card-img-overlay {
            top: auto;
            background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.7));
        }
    }
}

.profile-picture {

    img {
        background-size: contain;
        background-position: center;
        background-repeat: no-repeat;
    }
}

.profile-matches {
    overflow: auto;
    max-height: 500px;

    .youtube-captcha {
        display: none !important;
    }
}

.profile-info,
.profile-stats,
.profile-matches {
    background-color: tint-color($dark, 5%);
}

.btn-icon {
    background: none;
    border: none;
    padding: 0;
    color: inherit;
    position: absolute;
    top: 10px;
    right: 10px;

    &:active {
        color: $primary-red;
    }
}